#!/usr/bin/env bash

usage() {
  echo "Usage: with [scope] [action] [subject]"
  exit 1
}

WITH_SCOPE=${1}
WITH_COMMAND="with.${1}.${2}.${3}"
SNIP=${1}/${2}/${3}
SNIP_FILE=/root/cli/$SNIP

if [ ! -f "$SNIP_FILE" ]; then
  echo "Command [$1 $2 $3] not found"
  usage
fi

shift 2

usage() {
  echo "Usage: sn $SNIP"
  echo "Params:"
  for key in ${!VAR[@]}; do
    echo "  --$key"
  done
  exit 1
}

eval "declare -A VAR=($(cat $SNIP_FILE | grep '#> ' | cut -c 4-))"

LONG="help"
for key in ${!VAR[@]}; do
  if [[ "${VAR[$key]}" == "_flag" ]]; then
    LONG="$LONG,${key}"
  else
    LONG="$LONG,${key}:"
  fi
done

ARGS=$(getopt --long $LONG -- "$@");
code=$?
if (( code > 0 )); then
  usage
fi

eval set -- ${ARGS}

while [[ $# -gt 0 ]]; do
  #echo "1=[$1], 2=[$2]"
  if [[ "$1" == "--" ]]; then
    i=1
    while [[ $# -gt 0 ]]; do
      eval "export P$i='''$2'''"
      ((i=i+1))
      shift
    done
  else
    V=${1:2}
    if [[ "${VAR[$V]}" == "_flag" ]]; then
      VAR[$V]=yes
      shift
    else
      VAR[$V]="$2"
      shift 2
    fi
  fi
done

KNOWN_VARS=""
for key in ${!VAR[@]}; do
  VNAME=$(echo "${key^^}" | tr '-' '_')
  eval "export $VNAME='''${VAR[$key]}'''"
  KNOWN_VARS="$KNOWN_VARS $VNAME"
done

# check required parameters

if [[ ! -z "$_PARAM" ]]; then
  for (( i=1; i<=$_PARAM; i++ )); do
    PARNUM="P$i"
    if [[ -z ${!PARNUM} ]]; then
      echo "Missing parameter ${PARNUM}"
      exit 1
    fi
  done
  PARNUM="P$((_PARAM+1))"
  if [[ ! -z ${!PARNUM} ]]; then
    echo "Unexpected parameter $PARNUM=${!PARNUM}"
    exit 1
  fi
fi


if [ "$WITH_TRACE" = "yes" ]; then
  export SPAN_ID=$(openssl rand -hex 16)
  span_start "$WITH_COMMAND" VAR
fi

bash <(cat $SNIP_FILE | envsubst "$KNOWN_VARS" | sed 's|#!/bin/bash|source ~/cli/.include/all|g')

if [ "$WITH_TRACE" = "yes" ]; then
  span_end
fi
